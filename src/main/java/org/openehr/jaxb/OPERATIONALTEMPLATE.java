//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.09.17 at 05:12:14 PM CEST 
//


package org.openehr.jaxb;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import opt_import.GenerateXForm;


/**
 * <p>Java class for OPERATIONAL_TEMPLATE complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="OPERATIONAL_TEMPLATE">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="language" type="{http://schemas.openehr.org/v1}CODE_PHRASE"/>
 *         &lt;element name="is_controlled" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="description" type="{http://schemas.openehr.org/v1}RESOURCE_DESCRIPTION" minOccurs="0"/>
 *         &lt;element name="revision_history" type="{http://schemas.openehr.org/v1}REVISION_HISTORY" minOccurs="0"/>
 *         &lt;element name="uid" type="{http://schemas.openehr.org/v1}HIER_OBJECT_ID" minOccurs="0"/>
 *         &lt;element name="template_id" type="{http://schemas.openehr.org/v1}TEMPLATE_ID"/>
 *         &lt;element name="concept" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="definition" type="{http://schemas.openehr.org/v1}C_ARCHETYPE_ROOT"/>
 *         &lt;element name="ontology" type="{http://schemas.openehr.org/v1}FLAT_ARCHETYPE_ONTOLOGY" minOccurs="0"/>
 *         &lt;element name="component_ontologies" type="{http://schemas.openehr.org/v1}FLAT_ARCHETYPE_ONTOLOGY" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="annotations" type="{http://schemas.openehr.org/v1}ANNOTATION" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="constraints" type="{http://schemas.openehr.org/v1}T_CONSTRAINT" minOccurs="0"/>
 *         &lt;element name="view" type="{http://schemas.openehr.org/v1}T_VIEW" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OPERATIONAL_TEMPLATE", propOrder = {
    "language",
    "isControlled",
    "description",
    "revisionHistory",
    "uid",
    "templateId",
    "concept",
    "definition",
    "ontology",
    "componentOntologies",
    "annotations",
    "constraints",
    "view",
    "pathNodeMap"
})
public class OPERATIONALTEMPLATE {

    @XmlElement(required = true)
    protected CODEPHRASE language;
    @XmlElement(name = "is_controlled")
    protected Boolean isControlled;
    protected RESOURCEDESCRIPTION description;
    @XmlElement(name = "revision_history")
    protected REVISIONHISTORY revisionHistory;
    protected HIEROBJECTID uid;
    @XmlElement(name = "template_id", required = true)
    protected TEMPLATEID templateId;
    @XmlElement(required = true)
    protected String concept;
    @XmlElement(required = true)
    protected CARCHETYPEROOT definition;
    protected FLATARCHETYPEONTOLOGY ontology;
    @XmlElement(name = "component_ontologies")
    protected List<FLATARCHETYPEONTOLOGY> componentOntologies;
    protected List<ANNOTATION> annotations;
    protected TCONSTRAINT constraints;
    protected TVIEW view;
    private Map<String, COBJECT> pathNodeMap =new HashMap<String, COBJECT>();

    /**
     * Gets the value of the language property.
     * 
     * @return
     *     possible object is
     *     {@link CODEPHRASE }
     *     
     */
    public CODEPHRASE getLanguage() {
        return language;
    }

    /**
     * Sets the value of the language property.
     * 
     * @param value
     *     allowed object is
     *     {@link CODEPHRASE }
     *     
     */
    public void setLanguage(CODEPHRASE value) {
        this.language = value;
    }

    /**
     * Gets the value of the isControlled property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsControlled() {
        return isControlled;
    }

    /**
     * Sets the value of the isControlled property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsControlled(Boolean value) {
        this.isControlled = value;
    }

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link RESOURCEDESCRIPTION }
     *     
     */
    public RESOURCEDESCRIPTION getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link RESOURCEDESCRIPTION }
     *     
     */
    public void setDescription(RESOURCEDESCRIPTION value) {
        this.description = value;
    }

    /**
     * Gets the value of the revisionHistory property.
     * 
     * @return
     *     possible object is
     *     {@link REVISIONHISTORY }
     *     
     */
    public REVISIONHISTORY getRevisionHistory() {
        return revisionHistory;
    }

    /**
     * Sets the value of the revisionHistory property.
     * 
     * @param value
     *     allowed object is
     *     {@link REVISIONHISTORY }
     *     
     */
    public void setRevisionHistory(REVISIONHISTORY value) {
        this.revisionHistory = value;
    }

    /**
     * Gets the value of the uid property.
     * 
     * @return
     *     possible object is
     *     {@link HIEROBJECTID }
     *     
     */
    public HIEROBJECTID getUid() {
        return uid;
    }

    /**
     * Sets the value of the uid property.
     * 
     * @param value
     *     allowed object is
     *     {@link HIEROBJECTID }
     *     
     */
    public void setUid(HIEROBJECTID value) {
        this.uid = value;
    }

    /**
     * Gets the value of the templateId property.
     * 
     * @return
     *     possible object is
     *     {@link TEMPLATEID }
     *     
     */
    public TEMPLATEID getTemplateId() {
        return templateId;
    }

    /**
     * Sets the value of the templateId property.
     * 
     * @param value
     *     allowed object is
     *     {@link TEMPLATEID }
     *     
     */
    public void setTemplateId(TEMPLATEID value) {
        this.templateId = value;
    }

    /**
     * Gets the value of the concept property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getConcept() {
        return concept;
    }

    /**
     * Sets the value of the concept property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setConcept(String value) {
        this.concept = value;
    }

    /**
     * Gets the value of the definition property.
     * 
     * @return
     *     possible object is
     *     {@link CARCHETYPEROOT }
     *     
     */
    public CARCHETYPEROOT getDefinition() {
        return definition;
    }

    /**
     * Sets the value of the definition property.
     * 
     * @param value
     *     allowed object is
     *     {@link CARCHETYPEROOT }
     *     
     */
    public void setDefinition(CARCHETYPEROOT value) {
        this.definition = value;
    }

    /**
     * Gets the value of the ontology property.
     * 
     * @return
     *     possible object is
     *     {@link FLATARCHETYPEONTOLOGY }
     *     
     */
    public FLATARCHETYPEONTOLOGY getOntology() {
        return ontology;
    }

    /**
     * Sets the value of the ontology property.
     * 
     * @param value
     *     allowed object is
     *     {@link FLATARCHETYPEONTOLOGY }
     *     
     */
    public void setOntology(FLATARCHETYPEONTOLOGY value) {
        this.ontology = value;
    }

    /**
     * Gets the value of the componentOntologies property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the componentOntologies property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getComponentOntologies().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FLATARCHETYPEONTOLOGY }
     * 
     * 
     */
    public List<FLATARCHETYPEONTOLOGY> getComponentOntologies() {
        if (componentOntologies == null) {
            componentOntologies = new ArrayList<FLATARCHETYPEONTOLOGY>();
        }
        return this.componentOntologies;
    }

    /**
     * Gets the value of the annotations property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the annotations property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAnnotations().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ANNOTATION }
     * 
     * 
     */
    public List<ANNOTATION> getAnnotations() {
        if (annotations == null) {
            annotations = new ArrayList<ANNOTATION>();
        }
        return this.annotations;
    }

    /**
     * Gets the value of the constraints property.
     * 
     * @return
     *     possible object is
     *     {@link TCONSTRAINT }
     *     
     */
    public TCONSTRAINT getConstraints() {
        return constraints;
    }

    /**
     * Sets the value of the constraints property.
     * 
     * @param value
     *     allowed object is
     *     {@link TCONSTRAINT }
     *     
     */
    public void setConstraints(TCONSTRAINT value) {
        this.constraints = value;
    }

    /**
     * Gets the value of the view property.
     * 
     * @return
     *     possible object is
     *     {@link TVIEW }
     *     
     */
    public TVIEW getView() {
        return view;
    }

    /**
     * Sets the value of the view property.
     * 
     * @param value
     *     allowed object is
     *     {@link TVIEW }
     *     
     */
    public void setView(TVIEW value) {
        this.view = value;
    }
    
    public void loadPathNodeMap(COBJECT node) {
    	//pathNodeMap=new HashMap<String, COBJECT>();
    	
		pathNodeMap.put(GenerateXForm.getFullPath(node), node);

		if (!(node instanceof CCOMPLEXOBJECT)) {
			return; // other types of cobject
		}
		CCOMPLEXOBJECT parent = (CCOMPLEXOBJECT) node;

		if (parent.getAttributes() == null) {
			return; // no attribute
		}
		for (CATTRIBUTE attribute : parent.getAttributes()) {
			if (attribute.getChildren() == null) {
				continue; // no child
			}
			for (COBJECT child : attribute.getChildren()) {
				loadPathNodeMap(child);
			}
		}
	}
    
    public void addNewNodeToMap(COBJECT node) {
    	loadPathNodeMap(node);
    }
    
    public COBJECT node(String path) {
    	return pathNodeMap.get(path);
    }
    
/*    public String getFullPath(COBJECT cobj) {
		StringBuilder sb=new StringBuilder(cobj.getPath());		
		if(cobj.getParent()!=null && cobj.getParent().getParent()!=null) {
			while(true) {
				sb.insert(0, cobj.getParent().getParent().getPath()+cobj.getParent().getPath());
				cobj=cobj.getParent().getParent();
				if(cobj.getParent()!=null && cobj.getParent().getParent()!=null) {
					continue;
				} else {
					break;
				}
			}
		}
		String path=sb.toString();
		return path;
	}*/
}
